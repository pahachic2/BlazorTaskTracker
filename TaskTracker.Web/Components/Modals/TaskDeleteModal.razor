@* Модальное окно подтверждения удаления задачи *@

@if (IsVisible)
{
    <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" @onclick="HandleCancel">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4" @onclick:stopPropagation="true">
            <!-- Заголовок -->
            <div class="flex items-center justify-between p-6 border-b border-gray-200">
                <div class="flex items-center space-x-3">
                    <div class="flex-shrink-0">
                        <div class="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                        </div>
                    </div>
                    <div>
                        <h3 class="text-lg font-semibold text-gray-900">Удалить задачу</h3>
                        <p class="text-sm text-gray-500">Это действие нельзя отменить</p>
                    </div>
                </div>
                <button @onclick="HandleCancel" class="text-gray-400 hover:text-gray-600 transition-colors">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>

            <!-- Содержимое -->
            <div class="p-6">
                @if (TaskToDelete != null)
                {
                    <div class="mb-4">
                        <p class="text-gray-900 mb-2">
                            Вы уверены, что хотите удалить задачу:
                        </p>
                        <div class="bg-gray-50 rounded-lg p-3 border">
                            <h4 class="font-medium text-gray-900 mb-1">@TaskToDelete.Title</h4>
                            @if (!string.IsNullOrEmpty(TaskToDelete.Description))
                            {
                                <p class="text-sm text-gray-600 mb-2">@TaskToDelete.Description</p>
                            }
                            @if (TaskToDelete.Tags.Any())
                            {
                                <div class="flex flex-wrap gap-1">
                                    @foreach (var tag in TaskToDelete.Tags)
                                    {
                                        <span class="@GetTagClasses(tag) px-2 py-1 rounded text-xs font-medium">
                                            @tag
                                        </span>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
                
                <p class="text-sm text-gray-600 mb-6">
                    Задача будет удалена безвозвратно из проекта и базы данных.
                </p>

                <!-- Кнопки -->
                <div class="flex space-x-3">
                    <button @onclick="HandleCancel"
                            class="flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                        Отмена
                    </button>
                    <button @onclick="HandleConfirm"
                            class="flex-1 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors">
                        Удалить задачу
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public KanbanTask? TaskToDelete { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback<KanbanTask> OnConfirm { get; set; }

    private async Task HandleCancel()
    {
        await OnCancel.InvokeAsync();
    }

    private async Task HandleConfirm()
    {
        if (TaskToDelete != null)
        {
            await OnConfirm.InvokeAsync(TaskToDelete);
        }
    }

    private string GetTagClasses(string tag)
    {
        return tag.ToLower() switch
        {
            "frontend" => "bg-blue-100 text-blue-800",
            "backend" => "bg-green-100 text-green-800",
            "bug" => "bg-red-100 text-red-800",
            "feature" => "bg-purple-100 text-purple-800",
            "urgent" => "bg-orange-100 text-orange-800",
            "design" => "bg-pink-100 text-pink-800",
            "testing" => "bg-yellow-100 text-yellow-800",
            "devops" => "bg-indigo-100 text-indigo-800",
            "documentation" => "bg-gray-100 text-gray-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }
} 